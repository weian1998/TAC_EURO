<%@ Control Language="C#" ClassName="OpportunityFulfilmentItems" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>
<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="100%" />
            <col width="100%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="QFListBox_lbl" AssociatedControlID="QFListBox" runat="server" Text="<%$ resources: QFListBox.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol select"  > 
<asp:ListBox runat="server" ID="QFListBox"  SelectionMode="Single" Rows="1"  >
</asp:ListBox>
  </div>

      </td>
                <td  >
 <asp:ImageButton runat="server" ID="cmdImportTemplateItems"
 AlternateText="<%$ resources: cmdImportTemplateItems.Caption %>"  ToolTip="<%$ resources: cmdImportTemplateItems.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Literature_Item_New_16x16"  />
 
      </td>
      </tr>
<tr>
            <td  colspan="2" >
<SalesLogix:SlxGridView runat="server" ID="grdOppFulfilmentItems" GridLines="None"
AutoGenerateColumns="false" CellPadding="4" CssClass="datagrid" PagerStyle-CssClass="gridPager"
AlternatingRowStyle-CssClass="rowdk" RowStyle-CssClass="rowlt" SelectedRowStyle-CssClass="rowSelected" ShowEmptyTable="true" EnableViewState="false"
 ExpandableRows="True" ResizableColumns="True"  OnRowCommand="grdOppFulfilmentItems_RowCommand" 
 DataKeyNames="InstanceId,Id" 
 OnRowEditing="grdOppFulfilmentItems_RowEditing" >
<Columns>
   <asp:CheckBoxField DataField="Completed" ReadOnly="True" 
      HeaderText="<%$ resources: grdOppFulfilmentItems.d0d6a5c2-b53f-40db-9735-b692c9a806f3.ColumnHeading %>"        >
  	    </asp:CheckBoxField>
    <asp:BoundField DataField="Stage" 
      HeaderText="<%$ resources: grdOppFulfilmentItems.6e986c04-2359-477a-85c3-7d6b5c6b8c8e.ColumnHeading %>"          >
      </asp:BoundField>
    <asp:BoundField DataField="ItemNumber" 
      HeaderText="<%$ resources: grdOppFulfilmentItems.0500ff7e-d8a1-4391-809f-55313710b96a.ColumnHeading %>"          >
      </asp:BoundField>
    <asp:BoundField DataField="Description" 
      HeaderText="<%$ resources: grdOppFulfilmentItems.2b4f4cb5-f6c9-43db-a51a-1b19d45870a5.ColumnHeading %>"          >
      </asp:BoundField>
    <asp:TemplateField   HeaderText="<%$ resources: grdOppFulfilmentItems.07cca6dc-d80b-47ae-8d8b-68399c64602e.ColumnHeading %>"        >
    <itemtemplate>
   <SalesLogix:DateTimePicker runat="server" ID="grdOppFulfilmentItemscol5" DisplayTime="false"  DisplayMode="AsText" DateTimeValue='<%#  dsOppFulfilmentItems.getPropertyValue(Container.DataItem, "StartDate")  %>'  CssClass=""  />
   </itemtemplate></asp:TemplateField>
    <asp:TemplateField   HeaderText="<%$ resources: grdOppFulfilmentItems.0f1b5a87-5c45-4bbf-831e-f74b532632b7.ColumnHeading %>"        >
    <itemtemplate>
   <SalesLogix:DateTimePicker runat="server" ID="grdOppFulfilmentItemscol6" DisplayTime="false"  DisplayMode="AsText" DateTimeValue='<%#  dsOppFulfilmentItems.getPropertyValue(Container.DataItem, "CompleteDate")  %>'  CssClass=""  />
   </itemtemplate></asp:TemplateField>
    <asp:BoundField DataField="IsDate" 
      HeaderText="<%$ resources: grdOppFulfilmentItems.99eef81a-2b9b-4d0e-a56c-4b359b62211e.ColumnHeading %>"          >
      </asp:BoundField>
    <asp:BoundField DataField="ItemDateLabel" 
      HeaderText="<%$ resources: grdOppFulfilmentItems.126af650-7bb9-44cc-80fe-efa57af1fc60.ColumnHeading %>"          >
      </asp:BoundField>
    <asp:BoundField DataField="ItemDate" 
      HeaderText="<%$ resources: grdOppFulfilmentItems.282dd67b-cbc2-4aa3-a1a9-217ff4054f7a.ColumnHeading %>"          >
      </asp:BoundField>
    <asp:BoundField DataField="IsText" 
      HeaderText="<%$ resources: grdOppFulfilmentItems.74c32828-c4a2-4c9f-aec9-08af735658ca.ColumnHeading %>"          >
      </asp:BoundField>
    <asp:BoundField DataField="ItemText" 
      HeaderText="<%$ resources: grdOppFulfilmentItems.06882ad3-1651-49a1-b8ad-47d7fdc7caf2.ColumnHeading %>"          >
      </asp:BoundField>
  <asp:ButtonField CommandName="Edit" 
  Text="<%$ resources: grdOppFulfilmentItems.e95babde-58ca-4680-9eb5-cb4e92f3af38.Text %>"               >
  	    </asp:ButtonField>
   </Columns>
</SalesLogix:SlxGridView>

<script runat="server" type="text/C#">


protected void grdOppFulfilmentItems_RowCommand(object sender, GridViewCommandEventArgs e)
{
    if (e.CommandName == "Page")
        return;
    int rowIndex;
    if (Int32.TryParse(e.CommandArgument.ToString(), out rowIndex))
    {
        dsOppFulfilmentItems.SelectedIndex = rowIndex;
		object currentEntity = dsOppFulfilmentItems.Current;
        if ((currentEntity is Sage.Platform.ComponentModel.ComponentView) && !((Sage.Platform.ComponentModel.ComponentView)currentEntity).IsVirtualComponent)
            currentEntity = ((Sage.Platform.ComponentModel.ComponentView)currentEntity).Component;
		string id = String.Empty;
        //Check if this is an unpersisted entity and use its InstanceId
        if (Sage.Platform.WebPortal.PortalUtil.ObjectIsNewEntity(currentEntity))
        {
		    if (grdOppFulfilmentItems.DataKeys[0].Values.Count > 1) {
                foreach (DictionaryEntry val in grdOppFulfilmentItems.DataKeys[rowIndex].Values)
                {
                    if (val.Key.ToString() == "InstanceId")
                    {
                        Guid instanceId = (Guid)val.Value;
                        dsOppFulfilmentItems.SetCurrentEntityByInstanceId(instanceId);
                        id = instanceId.ToString();
		                currentEntity = dsOppFulfilmentItems.Current;
                        if ((currentEntity is Sage.Platform.ComponentModel.ComponentView) && !((Sage.Platform.ComponentModel.ComponentView)currentEntity).IsVirtualComponent)
                            currentEntity = ((Sage.Platform.ComponentModel.ComponentView)currentEntity).Component;
                    }
                }                 
            }
        }
        else
        {
            foreach (DictionaryEntry val in grdOppFulfilmentItems.DataKeys[rowIndex].Values)
            {
                if (val.Key.ToString() != "InstanceId")
                {
                    id = val.Value.ToString();
                }
            }
        }		
        if (e.CommandName.Equals("Edit"))
        {
            if (DialogService != null)
            {
				// QFDataGrid
							DialogService.SetSpecs(400, 800, "AddEditFulfilmentItem", GetLocalResourceObject("34f883cc-64f4-4a32-a78b-e4c00f919828.DialogTitleOverride").ToString() );
			                DialogService.EntityType = typeof(Sage.Entity.Interfaces.IOppFulfilmentItem );
                DialogService.EntityID = id;
                DialogService.ShowDialog();
            }
        }
	}
    grdOppFulfilmentItems_refresh();
}
	
	protected void grdOppFulfilmentItems_refresh()
	{
		if (PageWorkItem != null) {
			Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
			if (refresher != null)
			{
				refresher.RefreshAll();
			}
			else
			{
				Response.Redirect(Request.Url.ToString());
			}
		}
	}
	
    	protected void grdOppFulfilmentItems_RowEditing(object sender, GridViewEditEventArgs e)
	{
		grdOppFulfilmentItems.SelectedIndex = e.NewEditIndex;
	}
        </script>

      </td>
            </tr>
<tr>
            <td></td>
                <td></td>
      </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="OpportunityFulfilmentItems_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="QFButton"
 AlternateText="<%$ resources: QFButton.Caption %>"  ToolTip="<%$ resources: QFButton.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=plus_16x16"  />
 
   </SalesLogix:SmartPartToolsContainer>

<script runat="server" type="text/C#">
private Sage.Platform.Security.IRoleSecurityService _roleSecurityService;
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService
{
   set
      {
         _roleSecurityService = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Security.IRoleSecurityService>(true);
      }
      get
      {
         return _roleSecurityService;
      }
}

public override Type EntityType
{
	get { return typeof(Sage.Entity.Interfaces.IOpportunity); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dsOppFulfilmentItems;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dsOppFulfilmentItems
{ 
  get 
  {
    if (_dsOppFulfilmentItems == null)
    {
             _dsOppFulfilmentItems = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.IOppFulfilmentItem), 
	    EntityType              ,"OppFulfilmentItems", System.Reflection.MemberTypes.Property);
                   _dsOppFulfilmentItems.UseSmartQuery = true;
      	   	}
 	return _dsOppFulfilmentItems;
  }
}

void dsOppFulfilmentItems_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dsOppFulfilmentItems.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dsOppFulfilmentItems);
   }
}

 



 

protected override void OnAddEntityBindings() { 
    
        
           dsOppFulfilmentItems.Bindings.Add(new Sage.Platform.WebPortal.Binding.WebEntityListBinding("OppFulfilmentItems", grdOppFulfilmentItems ));
   dsOppFulfilmentItems.BindFieldNames = new String[] { "Id","Completed","Stage","ItemNumber","Description","StartDate","CompleteDate","IsDate","ItemDateLabel","ItemDate","IsText","ItemText" };
     
     BindingSource.OnCurrentEntitySet += new EventHandler(dsOppFulfilmentItems_OnCurrentEntitySet);
     
    }
	   	   	   
protected void QFButton_ClickAction(object sender, EventArgs e) {
if (DialogService != null)
{
	// InsertChildDialogActionItem
	DialogService.SetSpecs(400, 800, "AddEditFulfilmentItem", GetLocalResourceObject("319fbf31-5b57-4250-b572-6037e3eb6dbf.DialogTitleOverride").ToString() );
  DialogService.EntityType = typeof(Sage.Entity.Interfaces.IOppFulfilmentItem); 
  DialogService.SetChildIsertInfo(
    typeof(Sage.Entity.Interfaces.IOppFulfilmentItem),
    typeof(Sage.Entity.Interfaces.IOpportunity),
    typeof(Sage.Entity.Interfaces.IOppFulfilmentItem).GetProperty("Opportunity"),
    typeof(Sage.Entity.Interfaces.IOpportunity).GetProperty("OppFulfilmentItems"));
  DialogService.ShowDialog();
}
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 QFButton.Click += new ImageClickEventHandler(QFButton_ClickAction);


}

protected override void OnFormBound()
{
if (dsOppFulfilmentItems.SourceObject == null) { dsOppFulfilmentItems.SourceObject = BindingSource.Current; }
if (dsOppFulfilmentItems.SourceObject == null) { RegisterBindingsWithClient(dsOppFulfilmentItems); }
dsOppFulfilmentItems.Bind();



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
	ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    	if (BindingSource != null)
	{
		if (BindingSource.Current != null)
		{
			tinfo.Description = BindingSource.Current.ToString();
			tinfo.Title = BindingSource.Current.ToString();
		}
	}
    	
	foreach (Control c in Controls)
	{
		SmartPartToolsContainer cont = c as SmartPartToolsContainer;
		if (cont != null)
		{
			switch (cont.ToolbarLocation)
			{
				case SmartPartToolsLocation.Right:
					foreach (Control tool in cont.Controls)
					{
											tinfo.RightTools.Add(tool);
										}
					break;
				case SmartPartToolsLocation.Center:
					foreach (Control tool in cont.Controls)
					{
						tinfo.CenterTools.Add(tool);
					}
					break;
				case SmartPartToolsLocation.Left:
					foreach (Control tool in cont.Controls)
					{
						tinfo.LeftTools.Add(tool);
					}
					break;
			}
		}
	}
	
		return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
	get { return _formAdapter ?? (_formAdapter = new OpportunityFulfilmentItemsAdapter(this)); }
}

public class OpportunityFulfilmentItemsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IOpportunityFulfilmentItems
{
	public OpportunityFulfilmentItemsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
		: base(smartPart) {}

	private Sage.Platform.Controls.IListBoxControl _QFListBox;
	public Sage.Platform.Controls.IListBoxControl QFListBox
	{
		get { return FindControl(ref _QFListBox, "QFListBox"); }
	}
	private Sage.Platform.Controls.IDataGridControl _grdOppFulfilmentItems;
	public Sage.Platform.Controls.IDataGridControl grdOppFulfilmentItems
	{
		get { return FindControl(ref _grdOppFulfilmentItems, "grdOppFulfilmentItems"); }
	}
	private Sage.Platform.Controls.IButtonControl _cmdImportTemplateItems;
	public Sage.Platform.Controls.IButtonControl cmdImportTemplateItems
	{
		get { return FindControl(ref _cmdImportTemplateItems, "cmdImportTemplateItems"); }
	}
	private Sage.Platform.Controls.IDataSourceControl _dsOppFulfilmentItems;
	public Sage.Platform.Controls.IDataSourceControl dsOppFulfilmentItems
	{
		get { return FindControl(ref _dsOppFulfilmentItems, "dsOppFulfilmentItems"); }
	}
	private Sage.Platform.Controls.IButtonControl _QFButton;
	public Sage.Platform.Controls.IButtonControl QFButton
	{
		get { return FindControl(ref _QFButton, "QFButton"); }
	}

}

</script>

<script type="text/javascript">
</script>
