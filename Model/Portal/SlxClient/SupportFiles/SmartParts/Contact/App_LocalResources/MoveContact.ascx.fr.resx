<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LookupPropertyAccount.Text" xml:space="preserve">
    <value>Compte</value>
  </data>
  <data name="LookupPropertyEmail.Text" xml:space="preserve">
    <value>Envoyer par e-mail</value>
  </data>
  <data name="lblReassign.Text" xml:space="preserve">
    <value>Réaffecter</value>
  </data>
  <data name="rdgOptionsDoNotMoveActivtyInfo.Text" xml:space="preserve">
    <value>Ne pas déplacer les activités</value>
  </data>
  <data name="LookupPropertyStatus.Text" xml:space="preserve">
    <value>Etat</value>
  </data>
  <data name="LookupPropertyMobile.Text" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="lblMoveToAcctLbl.Text" xml:space="preserve">
    <value>À</value>
  </data>
  <data name="chkUseSourceAddressPhn.Caption" xml:space="preserve">
    <value>Utiliser les informations téléphoniques/adresse du nouveau compte.</value>
  </data>
  <data name="lblReassignToContact.Text" xml:space="preserve">
    <value>Réaffecter au Contact :</value>
  </data>
  <data name="lblReassignSupportItems.Text" xml:space="preserve">
    <value>Tickets, retours et contrats ouverts</value>
  </data>
  <data name="rdgOptionsMoveActivtyInfo.Text" xml:space="preserve">
    <value>Déplacer les informations sur l'activité vers le nouveau compte</value>
  </data>
  <data name="lblMoveSourceLbl.Text" xml:space="preserve">
    <value>Déplacer</value>
  </data>
  <data name="LookupPropertyWork.Text" xml:space="preserve">
    <value>Bureau</value>
  </data>
  <data name="error_ReassignValueNotSpecified.Text" xml:space="preserve">
    <value>*Vous devez indiquer un contact de réaffectation avant de continuer.</value>
  </data>
  <data name="rdgOptionsMoveNotesHistory.Text" xml:space="preserve">
    <value>Déplacer les informations sur les notes/historiques vers le nouveau compte</value>
  </data>
  <data name="LookupPropertyLastName.Text" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="cmdCancel.Text" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="ConfirmMove.Text" xml:space="preserve">
    <value>Voulez-vous vraiment déplacer le contact et les éléments sélectionnés ?</value>
  </data>
  <data name="cmdOK.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="lblSourceAccount.Text" xml:space="preserve">
    <value>Compte :</value>
  </data>
  <data name="lblSingleContact.Text" xml:space="preserve">
    <value>{0} est le seul contact actuellement associé à {1}.</value>
  </data>
  <data name="lblTargetAccount.Text" xml:space="preserve">
    <value>Compte :</value>
  </data>
  <data name="lblMoveOptions.Text" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="lblAddressPhone.Text" xml:space="preserve">
    <value>Adresse et numéro de téléphone</value>
  </data>
  <data name="LookupPropertyType.Text" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="lblReassignClosedItems.Text" xml:space="preserve">
    <value>Demandes de documentation et opportunités clôturées ou complétées</value>
  </data>
  <data name="LookupPropertySubType.Text" xml:space="preserve">
    <value>Sous-Type</value>
  </data>
  <data name="lblReassignInfo.Text" xml:space="preserve">
    <value>Lorsque vous déplacez un contact, les éléments suivants doivent être déplacés avec le contact ou être réaffectés avec un contact associé à l'ancien compte.</value>
  </data>
  <data name="cmdCancel_Close.Text" xml:space="preserve">
    <value>Fermer</value>
  </data>
  <data name="lblMoveFromLbl.Text" xml:space="preserve">
    <value>De</value>
  </data>
  <data name="lblCantMoveItemsInfo.Text" xml:space="preserve">
    <value>Les éléments suivants ne peuvent pas être déplacés. Ils doivent être réaffectés à un contact sur le compte source.</value>
  </data>
  <data name="rdgOptionsDoNotMoveNotesHistory.Text" xml:space="preserve">
    <value>Ne pas déplacer ces éléments</value>
  </data>
  <data name="error_ReassignValueDuplicate.Text" xml:space="preserve">
    <value>*Veuillez sélectionner un contact cible différent du contact source déplacé.</value>
  </data>
  <data name="error_DuplicateTargetAccount.Text" xml:space="preserve">
    <value>Le répertoire cible doit être différent du répertoire source</value>
  </data>
  <data name="LookupPropertyFirstName.Text" xml:space="preserve">
    <value>Prénom</value>
  </data>
  <data name="lblHeader.Text" xml:space="preserve">
    <value>Utilisez cette page pour déplacer un contact d'un compte à un autre et pour déplacer ou réaffecter les enregistrements correspondants.</value>
  </data>
  <data name="LookupPropertyMainPhone.Text" xml:space="preserve">
    <value>Tél. principal</value>
  </data>
  <data name="associationsExist.Text" xml:space="preserve">
    <value>Désolé, impossible de déplacer ce contact car il est déjà attribué : {1}</value>
  </data>
  <data name="lblReassignOpenItems.Text" xml:space="preserve">
    <value>Pièces jointes, demandes de documentation, opportunités et bons de commande ouverts ou actifs</value>
  </data>
  <data name="error_NoTargetAccount.Text" xml:space="preserve">
    <value>Veuillez sélectionner un compte cible avant de continuer.</value>
  </data>
  <data name="lblMoveTicketsReturnsContracts.Text" xml:space="preserve">
    <value>Tickets, retours, contrats et bons de commande</value>
  </data>
  <data name="lblSourceContact.Text" xml:space="preserve">
    <value>Contact :</value>
  </data>
  <data name="ContactMove_ContactHasChanged" xml:space="preserve">
    <value>Le contact a été modifié et doit être enregistré avant d’être déplacé vers un nouveau compte.</value>
  </data>
</root>