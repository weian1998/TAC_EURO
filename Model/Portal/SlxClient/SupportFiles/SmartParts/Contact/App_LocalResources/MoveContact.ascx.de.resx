<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LookupPropertyAccount.Text" xml:space="preserve">
    <value>Firma</value>
  </data>
  <data name="LookupPropertyEmail.Text" xml:space="preserve">
    <value>E-Mail</value>
  </data>
  <data name="lblReassign.Text" xml:space="preserve">
    <value>Erneut zuweisen</value>
  </data>
  <data name="rdgOptionsDoNotMoveActivtyInfo.Text" xml:space="preserve">
    <value>Aktivitäten dürfen nicht verschoben werden</value>
  </data>
  <data name="LookupPropertyStatus.Text" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="LookupPropertyMobile.Text" xml:space="preserve">
    <value>Mobil</value>
  </data>
  <data name="lblMoveToAcctLbl.Text" xml:space="preserve">
    <value>An</value>
  </data>
  <data name="chkUseSourceAddressPhn.Caption" xml:space="preserve">
    <value>Verwenden Sie Adresse und Telefonnummer der neuen Firma.</value>
  </data>
  <data name="lblReassignToContact.Text" xml:space="preserve">
    <value>Erneut zuweisen zu Kontakt:</value>
  </data>
  <data name="lblReassignSupportItems.Text" xml:space="preserve">
    <value>Offene Tickets, Retouren und Verträge</value>
  </data>
  <data name="rdgOptionsMoveActivtyInfo.Text" xml:space="preserve">
    <value>Aktivitätsinformationen zur neuen Firma verschieben</value>
  </data>
  <data name="lblMoveSourceLbl.Text" xml:space="preserve">
    <value>Verschieben</value>
  </data>
  <data name="LookupPropertyWork.Text" xml:space="preserve">
    <value>Geschäftlich</value>
  </data>
  <data name="error_ReassignValueNotSpecified.Text" xml:space="preserve">
    <value>* Sie müssen einen Kontakt für die Neuzuweisung angeben, bevor Sie fortfahren.</value>
  </data>
  <data name="rdgOptionsMoveNotesHistory.Text" xml:space="preserve">
    <value>Notizen/Historieninformationen zur neuen Firma verschieben</value>
  </data>
  <data name="LookupPropertyLastName.Text" xml:space="preserve">
    <value>Nachname</value>
  </data>
  <data name="cmdCancel.Text" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="ConfirmMove.Text" xml:space="preserve">
    <value>Möchten Sie den Kontakt und die ausgewählten Elemente wirklich verschieben?</value>
  </data>
  <data name="cmdOK.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="lblSourceAccount.Text" xml:space="preserve">
    <value>Firma:</value>
  </data>
  <data name="lblSingleContact.Text" xml:space="preserve">
    <value>{0} ist der einzige Kontakt, der momentan mit {1} verknüpft ist.</value>
  </data>
  <data name="lblTargetAccount.Text" xml:space="preserve">
    <value>Firma:</value>
  </data>
  <data name="lblMoveOptions.Text" xml:space="preserve">
    <value>Optionen</value>
  </data>
  <data name="lblAddressPhone.Text" xml:space="preserve">
    <value>Adresse und Telefonnummer</value>
  </data>
  <data name="LookupPropertyType.Text" xml:space="preserve">
    <value>Typ</value>
  </data>
  <data name="lblReassignClosedItems.Text" xml:space="preserve">
    <value>Geschlossene oder erfüllte Literaturanfragen und Verkaufschancen</value>
  </data>
  <data name="LookupPropertySubType.Text" xml:space="preserve">
    <value>Untertyp</value>
  </data>
  <data name="lblReassignInfo.Text" xml:space="preserve">
    <value>Beim Verschieben eines Kontakts müssen die folgenden Elemente entweder mit dem Kontakt verschoben oder einem mit der alten Firma verknüpften Kontakt neu zugewiesen werden.</value>
  </data>
  <data name="cmdCancel_Close.Text" xml:space="preserve">
    <value>Schließen</value>
  </data>
  <data name="lblMoveFromLbl.Text" xml:space="preserve">
    <value>Von</value>
  </data>
  <data name="lblCantMoveItemsInfo.Text" xml:space="preserve">
    <value>Die folgenden Elemente können nicht verschoben werden. Sie müssen einem Kontakt in der Quellfirma neu zugewiesen werden.</value>
  </data>
  <data name="rdgOptionsDoNotMoveNotesHistory.Text" xml:space="preserve">
    <value>Diese Elemente dürfen nicht verschoben werden</value>
  </data>
  <data name="error_ReassignValueDuplicate.Text" xml:space="preserve">
    <value>* Bitte wählen Sie einen Zielkontakt aus, der nicht mit dem zu verschiebenden Quellkontakt identisch ist.</value>
  </data>
  <data name="error_DuplicateTargetAccount.Text" xml:space="preserve">
    <value>Wählen Sie eine Zielfirma aus, die nicht mit der Quellfirma identisch ist</value>
  </data>
  <data name="LookupPropertyFirstName.Text" xml:space="preserve">
    <value>Vorname</value>
  </data>
  <data name="lblHeader.Text" xml:space="preserve">
    <value>Mithilfe dieser Seite können Sie einen Kontakt von einer Firma zu einer anderen verschieben sowie zugehörige Datensätze verschieben oder neu zuweisen.</value>
  </data>
  <data name="LookupPropertyMainPhone.Text" xml:space="preserve">
    <value>Haupttelefonnummer</value>
  </data>
  <data name="associationsExist.Text" xml:space="preserve">
    <value>Dieser Kontakt kann leider nicht verschoben werden, da er zugewiesen ist: {1}</value>
  </data>
  <data name="lblReassignOpenItems.Text" xml:space="preserve">
    <value>Offene oder aktive Anlagen, Literaturanfragen, Verkaufschancen und Verkaufsaufträge</value>
  </data>
  <data name="error_NoTargetAccount.Text" xml:space="preserve">
    <value>Bitte wählen Sie eine Zielfirma, bevor Sie fortfahren.</value>
  </data>
  <data name="lblMoveTicketsReturnsContracts.Text" xml:space="preserve">
    <value>Tickets, Retouren, Verträge und Verkaufsaufträge</value>
  </data>
  <data name="lblSourceContact.Text" xml:space="preserve">
    <value>Kontakt:</value>
  </data>
  <data name="ContactMove_ContactHasChanged" xml:space="preserve">
    <value>Der Kontakt wurde geändert und muss gespeichert werden, bevor er zu einer neuen Firma verschoben werden kann.</value>
  </data>
</root>