<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="chkUseSourceAddressPhn.Caption" xml:space="preserve">
    <value>Use the new account's address and phone number information.</value>
  </data>
  <data name="cmdCancel.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="cmdOK.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="ConfirmMove.Text" xml:space="preserve">
    <value>Are you sure you want to move the contact and the selected items?</value>
  </data>
  <data name="lblAddressPhone.Text" xml:space="preserve">
    <value>Address and Phone</value>
  </data>
  <data name="lblCantMoveItemsInfo.Text" xml:space="preserve">
    <value>The following items cannot be moved. They must be reassigned to a contact at the source account.</value>
  </data>
  <data name="lblHeader.Text" xml:space="preserve">
    <value>Use this page to move a contact from one account to another, and to move or reassign related records.</value>
  </data>
  <data name="lblMoveFromLbl.Text" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="lblMoveOptions.Text" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="lblMoveSourceLbl.Text" xml:space="preserve">
    <value>Move</value>
  </data>
  <data name="lblMoveTicketsReturnsContracts.Text" xml:space="preserve">
    <value>Tickets, returns, contracts, and sales orders</value>
  </data>
  <data name="lblMoveToAcctLbl.Text" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="lblReassign.Text" xml:space="preserve">
    <value>Reassign</value>
  </data>
  <data name="lblReassignClosedItems.Text" xml:space="preserve">
    <value>Closed or fulfilled literature requests and opportunities</value>
  </data>
  <data name="lblReassignInfo.Text" xml:space="preserve">
    <value>When you move a contact the following items must either move with the contact or be reassigned to a contact associated with the old account.</value>
  </data>
  <data name="lblReassignOpenItems.Text" xml:space="preserve">
    <value>Open or active attachments, literature requests, opportunities, and sales orders</value>
  </data>
  <data name="lblReassignToContact.Text" xml:space="preserve">
    <value>Reassign to contact:</value>
  </data>
  <data name="lblSourceAccount.Text" xml:space="preserve">
    <value>Account:</value>
  </data>
  <data name="lblSourceContact.Text" xml:space="preserve">
    <value>Contact:</value>
  </data>
  <data name="lblTargetAccount.Text" xml:space="preserve">
    <value>Account:</value>
  </data>
  <data name="error_DuplicateTargetAccount.Text" xml:space="preserve">
    <value>Please select a target account, different from the source account</value>
  </data>
  <data name="LookupPropertyAccount.Text" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="LookupPropertyEmail.Text" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="LookupPropertyFirstName.Text" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="LookupPropertyLastName.Text" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="LookupPropertyMainPhone.Text" xml:space="preserve">
    <value>Main Phone</value>
  </data>
  <data name="LookupPropertyMobile.Text" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="LookupPropertyStatus.Text" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="LookupPropertySubType.Text" xml:space="preserve">
    <value>Sub-Type</value>
  </data>
  <data name="LookupPropertyType.Text" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="LookupPropertyWork.Text" xml:space="preserve">
    <value>Work</value>
  </data>
  <data name="rdgOptionsDoNotMoveActivtyInfo.Text" xml:space="preserve">
    <value>Do not move activities</value>
  </data>
  <data name="rdgOptionsDoNotMoveNotesHistory.Text" xml:space="preserve">
    <value>Do not move these items</value>
  </data>
  <data name="rdgOptionsMoveActivtyInfo.Text" xml:space="preserve">
    <value>Move activity information to the new account</value>
  </data>
  <data name="rdgOptionsMoveNotesHistory.Text" xml:space="preserve">
    <value>Move notes/history information to the new account</value>
  </data>
  <data name="error_NoTargetAccount.Text" xml:space="preserve">
    <value>Please select a target account before continuing.</value>
  </data>
  <data name="lblSingleContact.Text" xml:space="preserve">
    <value>{0} is the only contact currently associated with {1}.</value>
  </data>
  <data name="associationsExist.Text" xml:space="preserve">
    <value>Sorry, you cannot move this contact because he or she is assigned: {1}</value>
  </data>
  <data name="cmdCancel_Close.Text" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="lblReassignSupportItems.Text" xml:space="preserve">
    <value>Open tickets, returns, and contracts</value>
  </data>
  <data name="error_ReassignValueDuplicate.Text" xml:space="preserve">
    <value>* Please select a target contact different from the source contact being moved.</value>
  </data>
  <data name="error_ReassignValueNotSpecified.Text" xml:space="preserve">
    <value>* You must specify a reassign contact before continuing.</value>
  </data>
  <data name="ContactMove_ContactHasChanged" xml:space="preserve">
    <value>The contact has been changed and must be saved before it can be moved to a new account.</value>
  </data>
</root>